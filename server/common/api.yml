openapi: 3.0.1
info:
  title: bikeshare
  description: Bike sharing app based on Divvy data
  version: 1.0.0
servers:
  - url: /api/v1
tags:
  - name: Examples
    description: Simple example endpoints
  - name: Stations
    description: Station endpoints
  - name: Specification
    description: The swagger API specification
paths:
  /stations:
    get:
      tags:
        - Stations
      description: Fetch all stations
      responses:
        200:
          description: Return all the stations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Station'
        4XX:
          description: Station not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Station not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /stations/{id}:
    get:
      tags:
        - Stations
      parameters:
        - name: id
          in: path
          description: The id of the station to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the station with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Station'
        4XX:
          description: Station not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Station not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trips:
    get:
      tags:
        - Trips
      description: Fetch all trips
      responses:
        200:
          description: Return all the trips
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Station'
        4XX:
          description: Trip not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Trip not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trips/_queryByEndStations:
    get:
      tags:
        - Trips
      parameters:
        - name: ids
          in: query
          description: The ids of the end station
          required: true
          allowReserved: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: quantity
          in: query
          description: The number of trips per station (sorted by latest, default=20)
          required: false
          schema:
            type: integer
      responses:
        200:
          description: Return the station with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Station'
        4XX:
          description: Station not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Station not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /examples:
    get:
      tags:
        - Examples
      description: Fetch all examples
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Examples
      description: Create a new example
      requestBody:
        description: an example
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExampleBody'
        required: true
      responses:
        201:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /examples/{id}:
    get:
      tags:
        - Examples
      parameters:
        - name: id
          in: path
          description: The id of the example to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
          content: {}
components:
  schemas:
    Example:
      type: object
      properties:
        id:
          type: integer
          example: 3
        name:
          type: string
          example: example 3
    Station:
      type: object
      properties:
        id: 
          type: number
          example: 1
        station_id:
          type: string
          example: "1"
        name:
          type: string
          example: "W Armitage Ave & N Sheffield Ave"
    Error:
      type: object
      additionalProperties: true

    ExampleBody:
      title: example
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: no_stress
